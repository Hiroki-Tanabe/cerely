services:
  redis:
    image: redis:alpine
    container_name: redis
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3
    networks:
      - tananet

  mysql:
    build:
      context: ./mysql/
      dockerfile: ./Dockerfile
    image: mysql:latest
    ports:
      - 3306:3306
    volumes:
      - ./mysql/data:/var/lib/mysql
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "--silent"]
      interval: 10s
      timeout: 5s
      retries: 3
    networks:
      - tananet

  celery_worker:
    build:
      context: ./celery/
      dockerfile: ./worker/Dockerfile
    container_name: celery_worker
    depends_on:
      - redis
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
    networks:
      - tananet

  celery_beat:
    build:
      context: ./celery/
      dockerfile: ./beat/Dockerfile
    container_name: celery_beat
    depends_on:
      - redis
      - celery_worker
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
    networks:
      - tananet
  
  django:
    build: 
      context: ./webapp/
      dockerfile: ./Dockerfile
    container_name: django_app
    volumes:
      - ./webapp/:/app
    ports:
      - "8000:8000"
    environment:
      - DEBUG=1
      - DJANGO_ARROWED_HOSTS = *
      - CELERY_BROKER=redis://redis:6379/0
      - CELERY_BACKEND=redis://redis:6379/0
      - CELERY_BROKER_URL=redis://redis:6379/0
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - tananet

networks:
  tananet:
    driver: bridge